global:
  # Set the prefix used for all resources in the Helm chart. If not set,
  # the prefix will be `<helm release name>`.
  name: null
  # The default array of objects containing image pull secret names that will be applied.
  imagePullSecrets: []
  # The default image policy for images: IfNotPresent, Always, Never
  imagePullPolicy: IfNotPresent

ui:
  # Number of replicas for the Deployment.
  replicas: 1
  # Title of the registry
  title: "Docker registry UI"
  # Allow delete of images
  deleteImages: false
  # UI behave as a proxy of the registry
  proxy: false
  # The URL of your docker registry, may be a service (when proxy is on) or an external URL.
  dockerRegistryUrl: null
  # Override the pull URL
  pullUrl: null
  # Show number of tags per images on catalog page. This will produce + nb images requests, not recommended on large registries.
  showCatalogNbTags: false
  # Show content digest in docker tag list.
  showContentDigest: false
  # Remove the menu that show the dialogs to add, remove and change the endpoint of your docker registry.
  singleRegistry: true
  # Limit the number of elements in the catalog page.
  catalogElementsLimit: 100000
  # Expose custom labels in history page, custom labels will be processed like maintainer label.
  historyCustomLabels: []
  # Update the default Nginx configuration and **set custom headers** for your backend docker registry. Only when `ui.proxy` is used.
  # Example:
  # nginxProxyHeaders:
  #  - my-heeader-name: my-header-value
  nginxProxyHeaders: []
  # Update the default Nginx configuration and **forward custom headers** to your backend docker registry. Only when `ui.proxy` is used.
  # Example:
  # nginxProxyPassHeaders: [ my-first-header, my-second-header ]
  nginxProxyPassHeaders: []
  # The name and tag of the docker image of the interface
  image: joxit/docker-registry-ui:2.2.1
  # Override default image pull secrets 
  imagePullSecrets: "-"
  # Override default pull policy
  imagePullPolicy: "-"
  # The resource settings for mesh gateway pods.
  resources: {}
  # Optional YAML string to specify a nodeSelector config.
  nodeSelector: {}
  # Optional YAML string to specify tolerations.
  tolerations: []
  # This value defines the affinity (https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity)
  # for server pods. 
  affinity: {}
  # Annotations to apply to the user interface deployment.
  annotations: null
  # Optional YAML string that will be appended to the deployment spec.
  additionalSpec: null

  service:
    # Type of service: LoadBalancer, ClusterIP or NodePort. If using NodePort service
    # type, you must set the desired `nodePorts` setting below.
    type: ClusterIP
    # Ports that will be exposed on the service
    port: 80
    # The port to listhen on the container. If under 1024, the user must be root
    targetPort: 80
    # If using a NodePort service type, you must specify the desired nodePort for each exposed port.
    nodePort: null
    # Annotations to apply to the user interface service.
    annotations: null
    # Optional YAML string that will be appended to the Service spec.
    additionalSpec: null
